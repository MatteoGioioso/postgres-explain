// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.6.1
// source: query_explainer.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// QueryExplainerClient is the client API for QueryExplainer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type QueryExplainerClient interface {
	SaveQueryPlan(ctx context.Context, in *SaveQueryPlanRequest, opts ...grpc.CallOption) (*SaveQueryPlanResponse, error)
	GetQueryPlan(ctx context.Context, in *GetQueryPlanRequest, opts ...grpc.CallOption) (*GetQueryPlanResponse, error)
	GetQueryPlansList(ctx context.Context, in *GetQueryPlansListRequest, opts ...grpc.CallOption) (*GetQueryPlansListResponse, error)
}

type queryExplainerClient struct {
	cc grpc.ClientConnInterface
}

func NewQueryExplainerClient(cc grpc.ClientConnInterface) QueryExplainerClient {
	return &queryExplainerClient{cc}
}

func (c *queryExplainerClient) SaveQueryPlan(ctx context.Context, in *SaveQueryPlanRequest, opts ...grpc.CallOption) (*SaveQueryPlanResponse, error) {
	out := new(SaveQueryPlanResponse)
	err := c.cc.Invoke(ctx, "/borealis.v1beta1.QueryExplainer/SaveQueryPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryExplainerClient) GetQueryPlan(ctx context.Context, in *GetQueryPlanRequest, opts ...grpc.CallOption) (*GetQueryPlanResponse, error) {
	out := new(GetQueryPlanResponse)
	err := c.cc.Invoke(ctx, "/borealis.v1beta1.QueryExplainer/GetQueryPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *queryExplainerClient) GetQueryPlansList(ctx context.Context, in *GetQueryPlansListRequest, opts ...grpc.CallOption) (*GetQueryPlansListResponse, error) {
	out := new(GetQueryPlansListResponse)
	err := c.cc.Invoke(ctx, "/borealis.v1beta1.QueryExplainer/GetQueryPlansList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// QueryExplainerServer is the server API for QueryExplainer service.
// All implementations must embed UnimplementedQueryExplainerServer
// for forward compatibility
type QueryExplainerServer interface {
	SaveQueryPlan(context.Context, *SaveQueryPlanRequest) (*SaveQueryPlanResponse, error)
	GetQueryPlan(context.Context, *GetQueryPlanRequest) (*GetQueryPlanResponse, error)
	GetQueryPlansList(context.Context, *GetQueryPlansListRequest) (*GetQueryPlansListResponse, error)
	mustEmbedUnimplementedQueryExplainerServer()
}

// UnimplementedQueryExplainerServer must be embedded to have forward compatible implementations.
type UnimplementedQueryExplainerServer struct {
}

func (UnimplementedQueryExplainerServer) SaveQueryPlan(context.Context, *SaveQueryPlanRequest) (*SaveQueryPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveQueryPlan not implemented")
}
func (UnimplementedQueryExplainerServer) GetQueryPlan(context.Context, *GetQueryPlanRequest) (*GetQueryPlanResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQueryPlan not implemented")
}
func (UnimplementedQueryExplainerServer) GetQueryPlansList(context.Context, *GetQueryPlansListRequest) (*GetQueryPlansListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQueryPlansList not implemented")
}
func (UnimplementedQueryExplainerServer) mustEmbedUnimplementedQueryExplainerServer() {}

// UnsafeQueryExplainerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to QueryExplainerServer will
// result in compilation errors.
type UnsafeQueryExplainerServer interface {
	mustEmbedUnimplementedQueryExplainerServer()
}

func RegisterQueryExplainerServer(s grpc.ServiceRegistrar, srv QueryExplainerServer) {
	s.RegisterService(&QueryExplainer_ServiceDesc, srv)
}

func _QueryExplainer_SaveQueryPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveQueryPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryExplainerServer).SaveQueryPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/borealis.v1beta1.QueryExplainer/SaveQueryPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryExplainerServer).SaveQueryPlan(ctx, req.(*SaveQueryPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryExplainer_GetQueryPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueryPlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryExplainerServer).GetQueryPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/borealis.v1beta1.QueryExplainer/GetQueryPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryExplainerServer).GetQueryPlan(ctx, req.(*GetQueryPlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _QueryExplainer_GetQueryPlansList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueryPlansListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(QueryExplainerServer).GetQueryPlansList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/borealis.v1beta1.QueryExplainer/GetQueryPlansList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(QueryExplainerServer).GetQueryPlansList(ctx, req.(*GetQueryPlansListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// QueryExplainer_ServiceDesc is the grpc.ServiceDesc for QueryExplainer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var QueryExplainer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "borealis.v1beta1.QueryExplainer",
	HandlerType: (*QueryExplainerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveQueryPlan",
			Handler:    _QueryExplainer_SaveQueryPlan_Handler,
		},
		{
			MethodName: "GetQueryPlan",
			Handler:    _QueryExplainer_GetQueryPlan_Handler,
		},
		{
			MethodName: "GetQueryPlansList",
			Handler:    _QueryExplainer_GetQueryPlansList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "query_explainer.proto",
}
