// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.6.1
// source: query_explainer.proto

package proto

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SaveQueryPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodStartFrom  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=period_start_from,json=periodStartFrom,proto3" json:"period_start_from,omitempty"`
	PeriodStartTo    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=period_start_to,json=periodStartTo,proto3" json:"period_start_to,omitempty"`
	InstanceName     string               `protobuf:"bytes,3,opt,name=instance_name,json=instanceName,proto3" json:"instance_name,omitempty"`
	ClusterName      string               `protobuf:"bytes,11,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	QueryId          string               `protobuf:"bytes,4,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	QueryFingerprint string               `protobuf:"bytes,12,opt,name=query_fingerprint,json=queryFingerprint,proto3" json:"query_fingerprint,omitempty"`
	Query            string               `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	Database         string               `protobuf:"bytes,5,opt,name=database,proto3" json:"database,omitempty"`
	OptimizationId   string               `protobuf:"bytes,9,opt,name=optimization_id,json=optimizationId,proto3" json:"optimization_id,omitempty"`
	Alias            string               `protobuf:"bytes,10,opt,name=alias,proto3" json:"alias,omitempty"`
	Parameters       []string             `protobuf:"bytes,8,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *SaveQueryPlanRequest) Reset() {
	*x = SaveQueryPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveQueryPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveQueryPlanRequest) ProtoMessage() {}

func (x *SaveQueryPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveQueryPlanRequest.ProtoReflect.Descriptor instead.
func (*SaveQueryPlanRequest) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{0}
}

func (x *SaveQueryPlanRequest) GetPeriodStartFrom() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStartFrom
	}
	return nil
}

func (x *SaveQueryPlanRequest) GetPeriodStartTo() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStartTo
	}
	return nil
}

func (x *SaveQueryPlanRequest) GetInstanceName() string {
	if x != nil {
		return x.InstanceName
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetQueryFingerprint() string {
	if x != nil {
		return x.QueryFingerprint
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetOptimizationId() string {
	if x != nil {
		return x.OptimizationId
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *SaveQueryPlanRequest) GetParameters() []string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type SaveQueryPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *SaveQueryPlanResponse) Reset() {
	*x = SaveQueryPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveQueryPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveQueryPlanResponse) ProtoMessage() {}

func (x *SaveQueryPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveQueryPlanResponse.ProtoReflect.Descriptor instead.
func (*SaveQueryPlanResponse) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{1}
}

func (x *SaveQueryPlanResponse) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type GetQueryPlanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlanId string `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
}

func (x *GetQueryPlanRequest) Reset() {
	*x = GetQueryPlanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryPlanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlanRequest) ProtoMessage() {}

func (x *GetQueryPlanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlanRequest.ProtoReflect.Descriptor instead.
func (*GetQueryPlanRequest) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{2}
}

func (x *GetQueryPlanRequest) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

type GetQueryPlanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QueryId           string               `protobuf:"bytes,2,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	PlanId            string               `protobuf:"bytes,6,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	QueryPlan         string               `protobuf:"bytes,1,opt,name=query_plan,json=queryPlan,proto3" json:"query_plan,omitempty"`
	QueryOriginalPlan string               `protobuf:"bytes,3,opt,name=query_original_plan,json=queryOriginalPlan,proto3" json:"query_original_plan,omitempty"`
	QueryFingerprint  string               `protobuf:"bytes,5,opt,name=query_fingerprint,json=queryFingerprint,proto3" json:"query_fingerprint,omitempty"`
	OptimizationId    string               `protobuf:"bytes,10,opt,name=optimization_id,json=optimizationId,proto3" json:"optimization_id,omitempty"`
	Query             string               `protobuf:"bytes,7,opt,name=query,proto3" json:"query,omitempty"`
	PeriodStart       *timestamp.Timestamp `protobuf:"bytes,8,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	Alias             string               `protobuf:"bytes,9,opt,name=alias,proto3" json:"alias,omitempty"`
}

func (x *GetQueryPlanResponse) Reset() {
	*x = GetQueryPlanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryPlanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlanResponse) ProtoMessage() {}

func (x *GetQueryPlanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlanResponse.ProtoReflect.Descriptor instead.
func (*GetQueryPlanResponse) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{3}
}

func (x *GetQueryPlanResponse) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *GetQueryPlanResponse) GetPlanId() string {
	if x != nil {
		return x.PlanId
	}
	return ""
}

func (x *GetQueryPlanResponse) GetQueryPlan() string {
	if x != nil {
		return x.QueryPlan
	}
	return ""
}

func (x *GetQueryPlanResponse) GetQueryOriginalPlan() string {
	if x != nil {
		return x.QueryOriginalPlan
	}
	return ""
}

func (x *GetQueryPlanResponse) GetQueryFingerprint() string {
	if x != nil {
		return x.QueryFingerprint
	}
	return ""
}

func (x *GetQueryPlanResponse) GetOptimizationId() string {
	if x != nil {
		return x.OptimizationId
	}
	return ""
}

func (x *GetQueryPlanResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *GetQueryPlanResponse) GetPeriodStart() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *GetQueryPlanResponse) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

type GetQueryPlansListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodStartFrom *timestamp.Timestamp `protobuf:"bytes,1,opt,name=period_start_from,json=periodStartFrom,proto3" json:"period_start_from,omitempty"`
	PeriodStartTo   *timestamp.Timestamp `protobuf:"bytes,2,opt,name=period_start_to,json=periodStartTo,proto3" json:"period_start_to,omitempty"`
	ClusterName     string               `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Limit           int64                `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Order           string               `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *GetQueryPlansListRequest) Reset() {
	*x = GetQueryPlansListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryPlansListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlansListRequest) ProtoMessage() {}

func (x *GetQueryPlansListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlansListRequest.ProtoReflect.Descriptor instead.
func (*GetQueryPlansListRequest) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{4}
}

func (x *GetQueryPlansListRequest) GetPeriodStartFrom() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStartFrom
	}
	return nil
}

func (x *GetQueryPlansListRequest) GetPeriodStartTo() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStartTo
	}
	return nil
}

func (x *GetQueryPlansListRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetQueryPlansListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetQueryPlansListRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

type GetQueryPlansListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*PlanItem `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *GetQueryPlansListResponse) Reset() {
	*x = GetQueryPlansListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQueryPlansListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQueryPlansListResponse) ProtoMessage() {}

func (x *GetQueryPlansListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQueryPlansListResponse.ProtoReflect.Descriptor instead.
func (*GetQueryPlansListResponse) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{5}
}

func (x *GetQueryPlansListResponse) GetPlans() []*PlanItem {
	if x != nil {
		return x.Plans
	}
	return nil
}

type GetOptimizationsListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeriodStartFrom  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=period_start_from,json=periodStartFrom,proto3" json:"period_start_from,omitempty"`
	PeriodStartTo    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=period_start_to,json=periodStartTo,proto3" json:"period_start_to,omitempty"`
	ClusterName      string               `protobuf:"bytes,3,opt,name=cluster_name,json=clusterName,proto3" json:"cluster_name,omitempty"`
	Limit            int64                `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Order            string               `protobuf:"bytes,5,opt,name=order,proto3" json:"order,omitempty"`
	QueryFingerprint string               `protobuf:"bytes,6,opt,name=query_fingerprint,json=queryFingerprint,proto3" json:"query_fingerprint,omitempty"`
	OptimizationId   string               `protobuf:"bytes,7,opt,name=optimization_id,json=optimizationId,proto3" json:"optimization_id,omitempty"`
}

func (x *GetOptimizationsListRequest) Reset() {
	*x = GetOptimizationsListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptimizationsListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptimizationsListRequest) ProtoMessage() {}

func (x *GetOptimizationsListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptimizationsListRequest.ProtoReflect.Descriptor instead.
func (*GetOptimizationsListRequest) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{6}
}

func (x *GetOptimizationsListRequest) GetPeriodStartFrom() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStartFrom
	}
	return nil
}

func (x *GetOptimizationsListRequest) GetPeriodStartTo() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStartTo
	}
	return nil
}

func (x *GetOptimizationsListRequest) GetClusterName() string {
	if x != nil {
		return x.ClusterName
	}
	return ""
}

func (x *GetOptimizationsListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetOptimizationsListRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

func (x *GetOptimizationsListRequest) GetQueryFingerprint() string {
	if x != nil {
		return x.QueryFingerprint
	}
	return ""
}

func (x *GetOptimizationsListRequest) GetOptimizationId() string {
	if x != nil {
		return x.OptimizationId
	}
	return ""
}

type GetOptimizationsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plans []*PlanItem `protobuf:"bytes,1,rep,name=plans,proto3" json:"plans,omitempty"`
}

func (x *GetOptimizationsListResponse) Reset() {
	*x = GetOptimizationsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOptimizationsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOptimizationsListResponse) ProtoMessage() {}

func (x *GetOptimizationsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOptimizationsListResponse.ProtoReflect.Descriptor instead.
func (*GetOptimizationsListResponse) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{7}
}

func (x *GetOptimizationsListResponse) GetPlans() []*PlanItem {
	if x != nil {
		return x.Plans
	}
	return nil
}

type PlanItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Alias            string               `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	PeriodStart      *timestamp.Timestamp `protobuf:"bytes,3,opt,name=period_start,json=periodStart,proto3" json:"period_start,omitempty"`
	Query            string               `protobuf:"bytes,4,opt,name=query,proto3" json:"query,omitempty"`
	OptimizationId   string               `protobuf:"bytes,5,opt,name=optimization_id,json=optimizationId,proto3" json:"optimization_id,omitempty"`
	QueryFingerprint string               `protobuf:"bytes,6,opt,name=query_fingerprint,json=queryFingerprint,proto3" json:"query_fingerprint,omitempty"`
	ExecutionTime    float32              `protobuf:"fixed32,7,opt,name=execution_time,json=executionTime,proto3" json:"execution_time,omitempty"`
	PlanningTime     float32              `protobuf:"fixed32,8,opt,name=planning_time,json=planningTime,proto3" json:"planning_time,omitempty"`
}

func (x *PlanItem) Reset() {
	*x = PlanItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_query_explainer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlanItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlanItem) ProtoMessage() {}

func (x *PlanItem) ProtoReflect() protoreflect.Message {
	mi := &file_query_explainer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlanItem.ProtoReflect.Descriptor instead.
func (*PlanItem) Descriptor() ([]byte, []int) {
	return file_query_explainer_proto_rawDescGZIP(), []int{8}
}

func (x *PlanItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlanItem) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *PlanItem) GetPeriodStart() *timestamp.Timestamp {
	if x != nil {
		return x.PeriodStart
	}
	return nil
}

func (x *PlanItem) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *PlanItem) GetOptimizationId() string {
	if x != nil {
		return x.OptimizationId
	}
	return ""
}

func (x *PlanItem) GetQueryFingerprint() string {
	if x != nil {
		return x.QueryFingerprint
	}
	return ""
}

func (x *PlanItem) GetExecutionTime() float32 {
	if x != nil {
		return x.ExecutionTime
	}
	return 0
}

func (x *PlanItem) GetPlanningTime() float32 {
	if x != nil {
		return x.PlanningTime
	}
	return 0
}

var File_query_explainer_proto protoreflect.FileDescriptor

var file_query_explainer_proto_rawDesc = []byte{
	0x0a, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x03, 0x0a, 0x14, 0x53, 0x61, 0x76,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x46, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x42, 0x0a, 0x0f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x30,
	0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x22, 0x2e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64,
	0x22, 0xda, 0x02, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2e, 0x0a, 0x13,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x6c, 0x61, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x2b, 0x0a, 0x11,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x22, 0xf5, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72,
	0x6f, 0x6d, 0x12, 0x42, 0x0a, 0x0f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x70,
	0x6c, 0x61, 0x6e, 0x73, 0x22, 0xce, 0x02, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x11, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0f, 0x70, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x42, 0x0a, 0x0f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0d, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x6f,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x70, 0x6c, 0x61, 0x6e, 0x73, 0x22, 0xa7, 0x02, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x5f, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x70, 0x6c, 0x61, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x54, 0x69, 0x6d,
	0x65, 0x32, 0xdc, 0x04, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x86, 0x01, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x26, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69,
	0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27,
	0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x22,
	0x19, 0x2f, 0x76, 0x30, 0x2f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2f, 0x53, 0x61, 0x76,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x12, 0x25,
	0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x6c, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x30, 0x2f, 0x65, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x2f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x3a,
	0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61,
	0x6c, 0x69, 0x73, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x6c, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x30, 0x2f, 0x65,
	0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2f, 0x47, 0x65, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50,
	0x6c, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa2, 0x01, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x62, 0x6f, 0x72, 0x65, 0x61, 0x6c, 0x69, 0x73, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6d, 0x69,
	0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x25, 0x22, 0x20, 0x2f, 0x76, 0x30,
	0x2f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x2f, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x74, 0x69,
	0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a,
	0x42, 0x08, 0x5a, 0x06, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_query_explainer_proto_rawDescOnce sync.Once
	file_query_explainer_proto_rawDescData = file_query_explainer_proto_rawDesc
)

func file_query_explainer_proto_rawDescGZIP() []byte {
	file_query_explainer_proto_rawDescOnce.Do(func() {
		file_query_explainer_proto_rawDescData = protoimpl.X.CompressGZIP(file_query_explainer_proto_rawDescData)
	})
	return file_query_explainer_proto_rawDescData
}

var file_query_explainer_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_query_explainer_proto_goTypes = []interface{}{
	(*SaveQueryPlanRequest)(nil),         // 0: borealis.v1beta1.SaveQueryPlanRequest
	(*SaveQueryPlanResponse)(nil),        // 1: borealis.v1beta1.SaveQueryPlanResponse
	(*GetQueryPlanRequest)(nil),          // 2: borealis.v1beta1.GetQueryPlanRequest
	(*GetQueryPlanResponse)(nil),         // 3: borealis.v1beta1.GetQueryPlanResponse
	(*GetQueryPlansListRequest)(nil),     // 4: borealis.v1beta1.GetQueryPlansListRequest
	(*GetQueryPlansListResponse)(nil),    // 5: borealis.v1beta1.GetQueryPlansListResponse
	(*GetOptimizationsListRequest)(nil),  // 6: borealis.v1beta1.GetOptimizationsListRequest
	(*GetOptimizationsListResponse)(nil), // 7: borealis.v1beta1.GetOptimizationsListResponse
	(*PlanItem)(nil),                     // 8: borealis.v1beta1.PlanItem
	(*timestamp.Timestamp)(nil),          // 9: google.protobuf.Timestamp
}
var file_query_explainer_proto_depIdxs = []int32{
	9,  // 0: borealis.v1beta1.SaveQueryPlanRequest.period_start_from:type_name -> google.protobuf.Timestamp
	9,  // 1: borealis.v1beta1.SaveQueryPlanRequest.period_start_to:type_name -> google.protobuf.Timestamp
	9,  // 2: borealis.v1beta1.GetQueryPlanResponse.period_start:type_name -> google.protobuf.Timestamp
	9,  // 3: borealis.v1beta1.GetQueryPlansListRequest.period_start_from:type_name -> google.protobuf.Timestamp
	9,  // 4: borealis.v1beta1.GetQueryPlansListRequest.period_start_to:type_name -> google.protobuf.Timestamp
	8,  // 5: borealis.v1beta1.GetQueryPlansListResponse.plans:type_name -> borealis.v1beta1.PlanItem
	9,  // 6: borealis.v1beta1.GetOptimizationsListRequest.period_start_from:type_name -> google.protobuf.Timestamp
	9,  // 7: borealis.v1beta1.GetOptimizationsListRequest.period_start_to:type_name -> google.protobuf.Timestamp
	8,  // 8: borealis.v1beta1.GetOptimizationsListResponse.plans:type_name -> borealis.v1beta1.PlanItem
	9,  // 9: borealis.v1beta1.PlanItem.period_start:type_name -> google.protobuf.Timestamp
	0,  // 10: borealis.v1beta1.QueryExplainer.SaveQueryPlan:input_type -> borealis.v1beta1.SaveQueryPlanRequest
	2,  // 11: borealis.v1beta1.QueryExplainer.GetQueryPlan:input_type -> borealis.v1beta1.GetQueryPlanRequest
	4,  // 12: borealis.v1beta1.QueryExplainer.GetQueryPlansList:input_type -> borealis.v1beta1.GetQueryPlansListRequest
	6,  // 13: borealis.v1beta1.QueryExplainer.GetOptimizationsList:input_type -> borealis.v1beta1.GetOptimizationsListRequest
	1,  // 14: borealis.v1beta1.QueryExplainer.SaveQueryPlan:output_type -> borealis.v1beta1.SaveQueryPlanResponse
	3,  // 15: borealis.v1beta1.QueryExplainer.GetQueryPlan:output_type -> borealis.v1beta1.GetQueryPlanResponse
	5,  // 16: borealis.v1beta1.QueryExplainer.GetQueryPlansList:output_type -> borealis.v1beta1.GetQueryPlansListResponse
	7,  // 17: borealis.v1beta1.QueryExplainer.GetOptimizationsList:output_type -> borealis.v1beta1.GetOptimizationsListResponse
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_query_explainer_proto_init() }
func file_query_explainer_proto_init() {
	if File_query_explainer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_query_explainer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveQueryPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SaveQueryPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryPlanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryPlanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryPlansListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQueryPlansListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptimizationsListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOptimizationsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_query_explainer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlanItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_query_explainer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_query_explainer_proto_goTypes,
		DependencyIndexes: file_query_explainer_proto_depIdxs,
		MessageInfos:      file_query_explainer_proto_msgTypes,
	}.Build()
	File_query_explainer_proto = out.File
	file_query_explainer_proto_rawDesc = nil
	file_query_explainer_proto_goTypes = nil
	file_query_explainer_proto_depIdxs = nil
}
